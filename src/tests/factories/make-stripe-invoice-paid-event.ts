import { faker } from '@faker-js/faker'

export function makeStripeInvoicePaidEvent(
	overrides?: Partial<Record<string, any>>,
) {
	const created = overrides?.created ?? Math.floor(Date.now() / 1000)

	return {
		id: overrides?.id ?? `evt_${faker.string.alphanumeric(14)}`,
		object: 'event',
		api_version: '2025-05-28.basil',
		created,
		data: {
			object: {
				id: overrides?.invoiceId ?? `in_${faker.string.alphanumeric(14)}`,
				object: 'invoice',
				account_country: 'BR',
				account_name: '√Årea restrita de Interview',
				account_tax_ids: null,
				amount_due: 3990,
				amount_overpaid: 0,
				amount_paid: 3990,
				amount_remaining: 0,
				amount_shipping: 0,
				application: null,
				attempt_count: 0,
				attempted: true,
				auto_advance: false,
				automatic_tax: {
					enabled: false,
					status: null,
				},
				automatically_finalizes_at: null,
				billing_reason: 'subscription_create',
				collection_method: 'charge_automatically',
				created,
				currency: 'brl',
				custom_fields: null,
				customer:
					overrides?.customerId ?? `cus_${faker.string.alphanumeric(14)}`,
				customer_address: null,
				customer_email: faker.internet.email(),
				customer_name: faker.company.name(),
				customer_phone: null,
				customer_shipping: null,
				customer_tax_exempt: 'none',
				customer_tax_ids: [],
				default_payment_method: null,
				default_source: null,
				default_tax_rates: [],
				description: null,
				discounts: [],
				due_date: null,
				effective_at: created,
				ending_balance: 0,
				footer: null,
				from_invoice: null,
				hosted_invoice_url: `https://invoice.stripe.com/i/${faker.string.alphanumeric(32)}?s=ap`,
				invoice_pdf: `https://pay.stripe.com/invoice/${faker.string.alphanumeric(32)}/pdf?s=ap`,
				issuer: {},
				last_finalization_error: null,
				latest_revision: null,
				lines: {},
				livemode: false,
				metadata: {},
				next_payment_attempt: null,
				number: `SRXWR${faker.string.alphanumeric(4).toUpperCase()}-0001`,
				on_behalf_of: null,
				parent: {},
				payment_settings: {},
				period_end: created,
				period_start: created,
				post_payment_credit_notes_amount: 0,
				pre_payment_credit_notes_amount: 0,
				receipt_number: null,
				rendering: null,
				shipping_cost: null,
				shipping_details: null,
				starting_balance: 0,
				statement_descriptor: null,
				status: 'paid',
				status_transitions: {},
				subtotal: 3990,
				subtotal_excluding_tax: 3990,
				test_clock: null,
				total: 3990,
				total_discount_amounts: [],
				total_excluding_tax: 3990,
				total_pretax_credit_amounts: [],
				total_taxes: [],
				webhooks_delivered_at: null,
			},
		},
		livemode: false,
		pending_webhooks: 2,
		request: {
			id: null,
			idempotency_key: faker.string.uuid(),
		},
		type: 'invoice.paid',
	}
}
